{"is_source_file": true, "format": "Python", "description": "This Python source file defines API route endpoints for authentication and user management functionalities, including registration, login, logout, token refresh, user info retrieval, password reset, tenant selection, tenant list retrieval, and invitation acceptance, using FastAPI framework with dependencies on SQLAlchemy ORM models, JWT handling, and password management.", "external_files": ["../../database/connection", "../../database/models", "../../schemas/auth", "../../auth/dependencies", "../../auth/jwt_handler"], "external_methods": ["get_db", "PasswordHandler.validate_password_strength", "PasswordHandler.hash_password", "PasswordHandler.verify_password", "JWTHandler.create_user_token", "JWTHandler.verify_invitation_token"], "published": ["register_user", "login_user", "logout_user", "refresh_token", "get_current_user_info", "request_password_reset", "confirm_password_reset", "select_tenant", "get_user_tenants", "accept_invitation"], "classes": [], "methods": [{"name": "register_user( request: UserRegistrationRequest, db: Session = Depends(get_db) )", "description": "Endpoint to register a new user and tenant, creating entries in the database and returning authentication tokens.", "scope": "", "scopeKind": ""}, {"name": "login_user( request: UserLoginRequest, db: Session = Depends(get_db) )", "description": "Endpoint to authenticate a user with email and password, returning JWT token and user info.", "scope": "", "scopeKind": ""}, {"name": "logout_user( current_user: CurrentUser = Depends(get_current_user) )", "description": "Endpoint to log out the current user, typically invalidating tokens.", "scope": "", "scopeKind": ""}, {"name": "refresh_token( current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Endpoint to refresh the user's access token.", "scope": "", "scopeKind": ""}, {"name": "get_current_user_info( current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Endpoint to retrieve information about the currently authenticated user.", "scope": "", "scopeKind": ""}, {"name": "request_password_reset( request: PasswordResetRequest, db: Session = Depends(get_db) )", "description": "Endpoint to initiate a password reset request by generating a reset token.", "scope": "", "scopeKind": ""}, {"name": "confirm_password_reset( request: PasswordResetConfirm, db: Session = Depends(get_db) )", "description": "Endpoint to confirm password reset with token and set a new password.", "scope": "", "scopeKind": ""}, {"name": "select_tenant( request: TenantSelectionRequest, current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Endpoint to select an active tenant for multi-tenant users.", "scope": "", "scopeKind": ""}, {"name": "get_user_tenants( current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Endpoint to retrieve the list of tenants associated with the current user.", "scope": "", "scopeKind": ""}, {"name": "accept_invitation( request_data: dict, db: Session = Depends(get_db) )", "description": "Endpoint to accept an invitation to join a tenant and create a user account with specified details.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "PasswordHandler.validate_password_strength", "PasswordHandler.hash_password", "PasswordHandler.verify_password", "JWTHandler.create_user_token", "JWTHandler.verify_invitation_token"], "search-terms": ["auth endpoints", "user registration", "tenant creation", "password reset", "JWT authentication", "multi-tenant support", "invitation acceptance"], "state": 2, "file_id": 25, "knowledge_revision": 63, "git_revision": "", "revision_history": [{"54": ""}, {"63": ""}], "ctags": [{"_type": "tag", "name": "accept_invitation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def accept_invitation($/", "language": "Python", "kind": "function", "signature": "( request_data: dict, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "confirm_password_reset", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def confirm_password_reset($/", "language": "Python", "kind": "function", "signature": "( request: PasswordResetConfirm, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_current_user_info", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def get_current_user_info($/", "language": "Python", "kind": "function", "signature": "( current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_user_tenants", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def get_user_tenants($/", "language": "Python", "kind": "function", "signature": "( current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "login_user", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def login_user($/", "language": "Python", "kind": "function", "signature": "( request: UserLoginRequest, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "logout_user", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def logout_user($/", "language": "Python", "kind": "function", "signature": "( current_user: CurrentUser = Depends(get_current_user) )"}, {"_type": "tag", "name": "refresh_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def refresh_token($/", "language": "Python", "kind": "function", "signature": "( current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def register_user($/", "language": "Python", "kind": "function", "signature": "( request: UserRegistrationRequest, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "request_password_reset", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def request_password_reset($/", "language": "Python", "kind": "function", "signature": "( request: PasswordResetRequest, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "select_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/auth.py", "pattern": "/^async def select_tenant($/", "language": "Python", "kind": "function", "signature": "( request: TenantSelectionRequest, current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )"}], "hash": "bfa2d0f209b1eb91ba9b87efad31634f", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routes/auth.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}