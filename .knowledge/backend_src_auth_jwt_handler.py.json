{"is_source_file": true, "format": "Python", "description": "This source file provides JWT token handling, including creating, verifying, and decoding JWT tokens for authentication, authorization, password reset, and invitation processes. It also includes password hashing and validation utilities.", "external_files": ["os", "secrets", "datetime", "typing", "jose", "passlib"], "external_methods": ["os.getenv", "secrets.token_urlsafe", "jwt.encode", "jwt.decode"], "published": ["get_password_hash", "verify_password", "create_access_token"], "classes": [{"name": "JWTHandler", "description": "Handles creation, verification, and decoding of JWT tokens for user authentication, password resets, and invitations."}, {"name": "PasswordHandler", "description": "Provides utilities for hashing, verifying, and validating passwords."}], "methods": [{"name": "str create_access_token(data: Dict[str, Any], expires_delta: Optional[timedelta] = None)", "description": "Generates a signed JWT access token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] verify_token(token: str)", "description": "Decodes and verifies a JWT token, returning payload if valid.", "scope": "JWTHandler", "scopeKind": "class"}, {"name": "str create_user_token(user_id: UUID, tenant_id: UUID, email: str, role: str)", "description": "Creates a JWT token containing user and tenant details.", "scope": "JWTHandler", "scopeKind": "class"}, {"name": "str create_reset_token(user_id: UUID)", "description": "Generates a JWT token for password reset with a 1-hour expiry.", "scope": "JWTHandler", "scopeKind": "class"}, {"name": "Optional[UUID] verify_reset_token(token: str)", "description": "Verifies a reset token and retrieves the user ID.", "scope": "JWTHandler", "scopeKind": "class"}, {"name": "str create_invitation_token(email: str, tenant_id: UUID, role: str)", "description": "Creates an invitation token with a 7-day expiry.", "scope": "JWTHandler", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] verify_invitation_token(token: str)", "description": "Verifies an invitation token, returning token data if valid.", "scope": "JWTHandler", "scopeKind": "class"}, {"name": "str hash_password(password: str)", "description": "Hashes a plaintext password.", "scope": "PasswordHandler", "scopeKind": "class"}, {"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verifies a plaintext password against a hash.", "scope": "", "scopeKind": ""}, {"name": "bool validate_password_strength(password: str)", "description": "Checks if a password meets minimum security criteria.", "scope": "PasswordHandler", "scopeKind": "class"}, {"name": "str get_password_hash(password: str)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["jwt.encode", "jwt.decode", "PasswordHandler.hash_password", "PasswordHandler.verify_password"], "search-terms": ["JWT token handling", "password hashing", "reset token", "invitation token", "tenant ID", "user ID", "JWTError", "HS256"], "state": 2, "file_id": 22, "knowledge_revision": 48, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"1440\"))  # 24 hours /", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWTHandler", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^class JWTHandler:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PasswordHandler", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^class PasswordHandler:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^SECRET_KEY = os.getenv(\"SECRET_KEY\", secrets.token_urlsafe(32))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def create_access_token(data: Dict[str, Any], expires_delta: Optional[timedelta] = None) -> /", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(data: Dict[str, Any], expires_delta: Optional[timedelta] = None)", "scope": "JWTHandler", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^def create_access_token(data: Dict[str, Any], expires_delta: Optional[timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: Dict[str, Any], expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_invitation_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def create_invitation_token(email: str, tenant_id: UUID, role: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(email: str, tenant_id: UUID, role: str)", "scope": "JWTHandler", "scopeKind": "class"}, {"_type": "tag", "name": "create_reset_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def create_reset_token(user_id: UUID) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(user_id: UUID)", "scope": "JWTHandler", "scopeKind": "class"}, {"_type": "tag", "name": "create_user_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def create_user_token(user_id: UUID, tenant_id: UUID, email: str, role: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(user_id: UUID, tenant_id: UUID, email: str, role: str)", "scope": "JWTHandler", "scopeKind": "class"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "hash_password", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def hash_password(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(password: str)", "scope": "PasswordHandler", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "validate_password_strength", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def validate_password_strength(password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(password: str)", "scope": "PasswordHandler", "scopeKind": "class"}, {"_type": "tag", "name": "verify_invitation_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def verify_invitation_token(token: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(token: str)", "scope": "JWTHandler", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(plain_password: str, hashed_password: str)", "scope": "PasswordHandler", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}, {"_type": "tag", "name": "verify_reset_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def verify_reset_token(token: str) -> Optional[UUID]:$/", "language": "Python", "typeref": "typename:Optional[UUID]", "kind": "member", "signature": "(token: str)", "scope": "JWTHandler", "scopeKind": "class"}, {"_type": "tag", "name": "verify_token", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/jwt_handler.py", "pattern": "/^    def verify_token(token: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(token: str)", "scope": "JWTHandler", "scopeKind": "class"}], "hash": "0126ce9ef312cd50a9346b351fa0d102", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/auth/jwt_handler.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"1440\"))  # 24 hours /", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.getenv(\"SECRET_KEY\", secrets.token_urlsafe(32))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"48": ""}]}