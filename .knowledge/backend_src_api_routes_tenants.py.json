{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing tenants in a multi-tenant system, including tenant creation, listing, updating, deactivation, user invitations, listing tenant users, updating user roles, and removing users from tenants. It uses FastAPI for route definitions and depends on SQLAlchemy ORM models and schemas.", "external_files": ["../../../database/connection", "../../../database/models", "../../../schemas/tenant", "../../../auth/dependencies", "../../../auth/jwt_handler"], "external_methods": ["get_db", "get_current_user", "get_current_admin_user", "JWTHandler.create_invitation_token"], "published": ["router"], "classes": [{"name": "APIRouter", "description": "FastAPI router instance used for defining tenant-related API endpoints."}], "methods": [{"name": "create_tenant( request: TenantCreateRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "Create a new tenant. Restricted to system admins.", "scope": "", "scopeKind": ""}, {"name": "list_tenants( active: Optional[bool] = Query(None, description=\"Filter by active status\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "Retrieve a paginated list of all tenants, restricted to system admins.", "scope": "", "scopeKind": ""}, {"name": "get_tenant( tenant_id: UUID, current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Get details of a specific tenant. Users can view their own tenant; admins can view any.", "scope": "", "scopeKind": ""}, {"name": "update_tenant( tenant_id: UUID, request: TenantUpdateRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "Update tenant information. Admin-only.", "scope": "", "scopeKind": ""}, {"name": "deactivate_tenant( tenant_id: UUID, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "Deactivate a tenant. Admin-only.", "scope": "", "scopeKind": ""}, {"name": "invite_user_to_tenant( tenant_id: UUID, request: UserInvitationRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "Send an invitation to join a tenant. Admin-only.", "scope": "", "scopeKind": ""}, {"name": "list_tenant_users( tenant_id: UUID, active: Optional[bool] = Query(None, description=\"Filter by active status\"), role: Optional[str] = Query(None, description=\"Filter by role\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "List all users in a tenant. Admin-only.", "scope": "", "scopeKind": ""}, {"name": "update_user_role_in_tenant( tenant_id: UUID, user_id: UUID, request: UserRoleUpdateRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "Update a user's role within a tenant. Admin-only.", "scope": "", "scopeKind": ""}, {"name": "remove_user_from_tenant( tenant_id: UUID, user_id: UUID, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )", "description": "Remove a user from a tenant. Admin-only.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "get_current_admin_user", "get_current_user", "JWTHandler.create_invitation_token"], "search-terms": ["tenant", "API routes", "tenant management", "multi-tenant", "FastAPI", "tenants.py", "tenant creation", "invite user", "deactivate tenant", "update tenant", "list tenants", "tenant details"], "state": 2, "file_id": 28, "knowledge_revision": 65, "git_revision": "", "revision_history": [{"60": ""}, {"65": ""}], "ctags": [{"_type": "tag", "name": "create_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def create_tenant($/", "language": "Python", "kind": "function", "signature": "( request: TenantCreateRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "deactivate_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def deactivate_tenant($/", "language": "Python", "kind": "function", "signature": "( tenant_id: UUID, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def get_tenant($/", "language": "Python", "kind": "function", "signature": "( tenant_id: UUID, current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "invite_user_to_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def invite_user_to_tenant($/", "language": "Python", "kind": "function", "signature": "( tenant_id: UUID, request: UserInvitationRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "list_tenant_users", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def list_tenant_users($/", "language": "Python", "kind": "function", "signature": "( tenant_id: UUID, active: Optional[bool] = Query(None, description=\"Filter by active status\"), role: Optional[str] = Query(None, description=\"Filter by role\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "list_tenants", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def list_tenants($/", "language": "Python", "kind": "function", "signature": "( active: Optional[bool] = Query(None, description=\"Filter by active status\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "remove_user_from_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def remove_user_from_tenant($/", "language": "Python", "kind": "function", "signature": "( tenant_id: UUID, user_id: UUID, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^router = APIRouter(prefix=\"\\/tenants\", tags=[\"Tenants\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def update_tenant($/", "language": "Python", "kind": "function", "signature": "( tenant_id: UUID, request: TenantUpdateRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "update_user_role_in_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/tenants.py", "pattern": "/^async def update_user_role_in_tenant($/", "language": "Python", "kind": "function", "signature": "( tenant_id: UUID, user_id: UUID, request: UserRoleUpdateRequest, current_user: CurrentUser = Depends(get_current_admin_user), db: Session = Depends(get_db) )"}], "hash": "edf4c16ee5600dbd21cbe074154a9560", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routes/tenants.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/tenants\", tags=[\"Tenants\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}