{"is_source_file": true, "format": "Python", "description": "This file provides authentication dependencies for FastAPI endpoints, including functions for extracting current user info, tenant context, authorization checks, and tenant filtering for database queries.", "external_files": ["../database/connection", "../database/models", ".jwt_handler"], "external_methods": ["get_db", "Tenant", "JWTHandler.verify_token"], "published": ["get_current_user", "get_current_admin_user", "get_tenant_context", "get_optional_user", "get_tenant_filter", "CurrentUser", "TenantFilter"], "classes": [{"name": "CurrentUser", "description": "Represents the current authenticated user with attributes like user_id, tenant_id, email, role, and an is_admin flag."}, {"name": "TenantFilter", "description": "Helper class to apply tenant-based filtering in database queries, encapsulating the tenant_id and providing a filter_query method."}], "methods": [{"name": "CurrentUser get_current_user( credentials: HTTPAuthorizationCredentials = Depends(security), db: Session = Depends(get_db) )", "description": "Retrieves the current user based on JWT credentials, verifying the token and constructing a CurrentUser object.", "scope": "", "scopeKind": ""}, {"name": "CurrentUser get_current_admin_user( current_user: CurrentUser = Depends(get_current_user) )", "description": "Ensures the current user has an admin role and returns the user; raises an exception otherwise.", "scope": "", "scopeKind": ""}, {"name": "Tenant get_tenant_context( x_tenant_id: Optional[str] = Header(None, alias=\"X-Tenant-ID\"), current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Obtains the tenant context, either from header or current user, verifying access and existence in the database.", "scope": "", "scopeKind": ""}, {"name": "Optional[CurrentUser] get_optional_user( credentials: Optional[HTTPAuthorizationCredentials] = Depends(security), db: Session = Depends(get_db) )", "description": "Attempts to retrieve the current user if credentials are provided; returns None if not authenticated.", "scope": "", "scopeKind": ""}, {"name": "TenantFilter get_tenant_filter( tenant: Tenant = Depends(get_tenant_context) )", "description": "Creates a TenantFilter object for database queries based on the current tenant context.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, tenant_id: UUID)", "scope": "TenantFilter", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, user_id: UUID, tenant_id: UUID, email: str, role: str)", "scope": "CurrentUser", "scopeKind": "class", "description": "unavailable"}, {"name": "filter_query(self, query, model_class)", "scope": "TenantFilter", "scopeKind": "class", "description": "unavailable"}], "calls": ["JWTHandler.verify_token", "get_db", "Tenant.query.filter", "UUID()", "query.filter"], "search-terms": ["auth dependencies", "JWT token validation", "get current user", "tenant context", "admin check", "tenant filtering", "depends dependencies", "FastAPI security"], "state": 2, "file_id": 23, "knowledge_revision": 72, "git_revision": "", "revision_history": [{"50": ""}, {"72": ""}], "ctags": [{"_type": "tag", "name": "CurrentUser", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^class CurrentUser:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TenantFilter", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^class TenantFilter:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^    def __init__(self, tenant_id: UUID):$/", "language": "Python", "kind": "member", "signature": "(self, tenant_id: UUID)", "scope": "TenantFilter", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^    def __init__(self, user_id: UUID, tenant_id: UUID, email: str, role: str):$/", "language": "Python", "kind": "member", "signature": "(self, user_id: UUID, tenant_id: UUID, email: str, role: str)", "scope": "CurrentUser", "scopeKind": "class"}, {"_type": "tag", "name": "filter_query", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^    def filter_query(self, query, model_class):$/", "language": "Python", "kind": "member", "signature": "(self, query, model_class)", "scope": "TenantFilter", "scopeKind": "class"}, {"_type": "tag", "name": "get_current_admin_user", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^async def get_current_admin_user($/", "language": "Python", "typeref": "typename:CurrentUser", "kind": "function", "signature": "( current_user: CurrentUser = Depends(get_current_user) )"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^async def get_current_user($/", "language": "Python", "typeref": "typename:CurrentUser", "kind": "function", "signature": "( credentials: HTTPAuthorizationCredentials = Depends(security), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_optional_user", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^async def get_optional_user($/", "language": "Python", "typeref": "typename:Optional[CurrentUser]", "kind": "function", "signature": "( credentials: Optional[HTTPAuthorizationCredentials] = Depends(security), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_tenant_context", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^async def get_tenant_context($/", "language": "Python", "typeref": "typename:Tenant", "kind": "function", "signature": "( x_tenant_id: Optional[str] = Header(None, alias=\"X-Tenant-ID\"), current_user: CurrentUser = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_tenant_filter", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^async def get_tenant_filter($/", "language": "Python", "typeref": "typename:TenantFilter", "kind": "function", "signature": "( tenant: Tenant = Depends(get_tenant_context) )"}, {"_type": "tag", "name": "security", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/auth/dependencies.py", "pattern": "/^security = HTTPBearer()$/", "language": "Python", "kind": "variable"}], "hash": "c2dfbcb9f49ae94501fc004cfed32e11", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/auth/dependencies.py", "fields": [{"name": "security = HTTPBearer()", "scope": "", "scopeKind": "", "description": "unavailable"}]}