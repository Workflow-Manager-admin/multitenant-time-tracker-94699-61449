{"is_source_file": true, "format": "Python", "description": "Unit tests for tenant management, user management, and data isolation in a multitenant system using FastAPI and unittest mocking.", "external_files": [".test_base", "fastapi", "unittest.mock"], "external_methods": ["status.HTTP_201_CREATED", "status.HTTP_200_OK", "status.HTTP_409_CONFLICT", "status.HTTP_403_FORBIDDEN", "status.HTTP_404_NOT_FOUND", "status.HTTP_204_NO_CONTENT"], "published": ["TestTenantManagement", "TestTenantUserManagement", "TestTenantDataIsolation"], "classes": [{"name": "TestTenantManagement", "description": "Test cases for tenant CRUD operations, activation, listing, and permissions."}, {"name": "TestTenantUserManagement", "description": "Test cases for managing tenant users, including invites, role updates, and removal."}, {"name": "TestTenantDataIsolation", "description": "Test cases ensuring data isolation between tenants in a multitenant setup."}], "methods": [{"name": "test_create_tenant_success(self, client: Mock, admin_auth_headers: Dict[str, str], sample_tenant_data: Dict[str, Any])", "description": "Tests successful creation of a tenant.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_create_tenant_duplicate_name(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Tests handling of duplicate tenant name during creation.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_create_tenant_non_admin(self, client: Mock, auth_headers: Dict[str, str], sample_tenant_data: Dict[str, Any])", "description": "Verifies tenant creation is forbidden for non-admin users.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_get_tenant_details(self, client: Mock, auth_headers: Dict[str, str])", "description": "Retrieves tenant details and verifies the response.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_update_tenant_settings(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Tests updating tenant settings via API.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_update_tenant_non_admin(self, client: Mock, auth_headers: Dict[str, str])", "description": "Verifies updating tenant info is forbidden for non-admins.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_deactivate_tenant(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Tests deactivation of a tenant.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_list_tenants_admin(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Lists all tenants for an admin user.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_list_tenants_non_admin(self, client: Mock, auth_headers: Dict[str, str])", "description": "Ensures non-admins see only their tenants.", "scope": "TestTenantManagement", "scopeKind": "class"}, {"name": "test_invite_user_to_tenant(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Tests inviting a user to a tenant.", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"name": "test_accept_tenant_invitation(self, client: Mock)", "description": "Tests accepting a tenant invitation.", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"name": "test_list_tenant_users(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Lists users within a tenant.", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"name": "test_update_user_role_in_tenant(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Updates a user's role within a tenant.", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"name": "test_remove_user_from_tenant(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Removes a user from a tenant.", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"name": "test_cross_tenant_data_access_prevention(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "description": "Ensures data cannot be accessed cross-tenant.", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"name": "test_tenant_data_modification_isolation(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "description": "Ensures data modification is tenant-specific.", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"name": "test_tenant_data_deletion_isolation(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "description": "Ensures data deletion respects tenant boundaries.", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"name": "test_tenant_listing_isolation(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "description": "Verifies tenant-specific data listing.", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"name": "test_database_query_tenant_filtering(self, client: Mock, auth_headers: Dict[str, str])", "description": "Verifies queries are filtered by tenant ID.", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"name": "mock_get_response(url, headers=None, **kwargs)", "scope": "TestTenantDataIsolation.test_tenant_listing_isolation", "scopeKind": "member", "description": "unavailable"}], "search-terms": ["TestTenantManagement", "tenant CRUD", "tenant activation", "tenant listing", "tenant permissions", "user management", "tenant invite", "tenant data isolation", "multitenant system", "FastAPI", "unit tests", "mock responses"], "state": 2, "file_id": 9, "knowledge_revision": 23, "git_revision": "", "revision_history": [{"19": ""}, {"23": ""}], "ctags": [{"_type": "tag", "name": "TestTenantDataIsolation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^class TestTenantDataIsolation(BaseAPITest, TenantIsolationTestMixin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestTenantManagement", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^class TestTenantManagement(BaseCRUDTest, TenantIsolationTestMixin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestTenantUserManagement", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^class TestTenantUserManagement(BaseAPITest):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "base_url", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    base_url = \"\\/clients\"  # Using clients as example for isolation testing$/", "language": "Python", "kind": "variable", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "base_url", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    base_url = \"\\/tenants\"$/", "language": "Python", "kind": "variable", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "mock_get_response", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^        def mock_get_response(url, headers=None, **kwargs):$/", "file": true, "language": "Python", "kind": "function", "signature": "(url, headers=None, **kwargs)", "scope": "TestTenantDataIsolation.test_tenant_listing_isolation", "scopeKind": "member"}, {"_type": "tag", "name": "test_accept_tenant_invitation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_accept_tenant_invitation(self, client: Mock):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock)", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_create_tenant_duplicate_name", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_create_tenant_duplicate_name(self, client: Mock, admin_auth_headers: Dict[str, str]/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_create_tenant_non_admin", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_create_tenant_non_admin(self, client: Mock, auth_headers: Dict[str, str], $/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str], sample_tenant_data: Dict[str, Any])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_create_tenant_success", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_create_tenant_success(self, client: Mock, admin_auth_headers: Dict[str, str], $/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str], sample_tenant_data: Dict[str, Any])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_cross_tenant_data_access_prevention", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_cross_tenant_data_access_prevention(self, client: Mock, auth_headers: Dict[str, str/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "test_database_query_tenant_filtering", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_database_query_tenant_filtering(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "test_deactivate_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_deactivate_tenant(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_get_tenant_details", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_get_tenant_details(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_invite_user_to_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_invite_user_to_tenant(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_list_tenant_users", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_list_tenant_users(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_list_tenants_admin", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_list_tenants_admin(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_list_tenants_non_admin", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_list_tenants_non_admin(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_remove_user_from_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_remove_user_from_tenant(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_tenant_data_deletion_isolation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_tenant_data_deletion_isolation(self, client: Mock, auth_headers: Dict[str, str], $/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "test_tenant_data_modification_isolation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_tenant_data_modification_isolation(self, client: Mock, auth_headers: Dict[str, str]/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "test_tenant_listing_isolation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_tenant_listing_isolation(self, client: Mock, auth_headers: Dict[str, str], $/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "scope": "TestTenantDataIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "test_update_tenant_non_admin", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_update_tenant_non_admin(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_update_tenant_settings", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_update_tenant_settings(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_update_user_role_in_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_tenants.py", "pattern": "/^    def test_update_user_role_in_tenant(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestTenantUserManagement", "scopeKind": "class"}], "hash": "b1910a93fdc8b2eb560813dc62e17c0f", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/tests/test_tenants.py", "fields": [{"name": "base_url = \"\\/clients\"  # Using clients as example for isolation testing", "scope": "TestTenantDataIsolation", "scopeKind": "class", "description": "unavailable"}, {"name": "base_url = \"\\/tenants\"", "scope": "TestTenantManagement", "scopeKind": "class", "description": "unavailable"}]}