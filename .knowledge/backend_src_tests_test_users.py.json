{"is_source_file": true, "format": "Python", "description": "This file contains comprehensive unit tests for user management functionalities in a multi-tenant FastAPI backend. It covers user CRUD operations, profile management, role updates, tenant data isolation, and self-service user features, using mocks to simulate API responses.", "external_files": ["./test_base.py"], "external_methods": ["BaseAPITest.assert_success_response", "BaseAPITest.assert_conflict", "BaseAPITest.assert_forbidden", "BaseAPITest.assert_error_response"], "published": ["TestUserManagement", "TestUserSelfService", "TestUserTenantIsolation"], "classes": [{"name": "TestUserManagement", "description": "Test suite for user CRUD operations, profile management, role updates, and tenant-specific user listing."}, {"name": "TestUserSelfService", "description": "Test suite for self-service user actions such as profile retrieval, updates, password changes, and activity logs."}, {"name": "TestUserTenantIsolation", "description": "Test suite verifying data isolation between tenants, including user listing and access restrictions."}], "methods": [{"name": "test_create_user_success(self, client: Mock, admin_auth_headers: Dict[str, str], sample_user_data: Dict[str, Any])", "description": "Tests successful creation of a new user with valid data.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_create_user_duplicate_email(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Tests handling of duplicate email during user creation within the same tenant.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_create_user_non_admin(self, client: Mock, auth_headers: Dict[str, str], sample_user_data: Dict[str, Any])", "description": "Ensures non-admin users cannot create new users.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_get_user_profile(self, client: Mock, auth_headers: Dict[str, str])", "description": "Retrieves user profile information successfully.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_update_user_profile(self, client: Mock, auth_headers: Dict[str, str])", "description": "Updates user profile data successfully.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_update_other_user_profile_forbidden(self, client: Mock, auth_headers: Dict[str, str])", "description": "Ensures users cannot update other users' profiles without proper permissions.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_admin_update_user_role(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Allows administrators to update user roles.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_deactivate_user(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Tests user account deactivation.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_list_users_in_tenant(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Lists all users within the current tenant.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_search_users(self, client: Mock, admin_auth_headers: Dict[str, str])", "description": "Searches users by query parameters like name or email.", "scope": "TestUserManagement", "scopeKind": "class"}, {"name": "test_get_own_profile(self, client: Mock, auth_headers: Dict[str, str])", "description": "User retrieves their own profile.", "scope": "TestUserSelfService", "scopeKind": "class"}, {"name": "test_update_own_profile(self, client: Mock, auth_headers: Dict[str, str])", "description": "User updates their own profile data.", "scope": "TestUserSelfService", "scopeKind": "class"}, {"name": "test_change_password(self, client: Mock, auth_headers: Dict[str, str])", "description": "User changes their password successfully.", "scope": "TestUserSelfService", "scopeKind": "class"}, {"name": "test_change_password_wrong_current(self, client: Mock, auth_headers: Dict[str, str])", "description": "Handles incorrect current password during password change.", "scope": "TestUserSelfService", "scopeKind": "class"}, {"name": "test_get_user_activity_log(self, client: Mock, auth_headers: Dict[str, str])", "description": "Retrieves activity logs for the user.", "scope": "TestUserSelfService", "scopeKind": "class"}, {"name": "test_user_list_tenant_isolation(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "description": "Verifies user listing is isolated per tenant.", "scope": "TestUserTenantIsolation", "scopeKind": "class"}, {"name": "test_cross_tenant_user_access_denied(self, client: Mock, auth_headers: Dict[str, str])", "description": "Restricts access to users from other tenants.", "scope": "TestUserTenantIsolation", "scopeKind": "class"}, {"name": "test_user_email_uniqueness_per_tenant(self, client: Mock, auth_headers: Dict[str, str])", "description": "Ensures email uniqueness within a tenant but allows duplicates across tenants.", "scope": "TestUserTenantIsolation", "scopeKind": "class"}, {"name": "mock_get_users(url, headers=None, **kwargs)", "scope": "TestUserTenantIsolation.test_user_list_tenant_isolation", "scopeKind": "member", "description": "unavailable"}], "calls": ["client.post", "client.get", "client.put", "client.post", "client.get", "client.put", "client.post", "client.get", "client.put", "client.get", "client.post", "client.get"], "search-terms": ["user management", "tenant isolation", "API response mocks", "FastAPI user tests", "profile update", "role management", "password change", "activity log", "user CRUD", "multi-tenant"], "state": 2, "file_id": 10, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "TestUserManagement", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^class TestUserManagement(BaseCRUDTest, TenantIsolationTestMixin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestUserSelfService", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^class TestUserSelfService(BaseAPITest):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestUserTenantIsolation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^class TestUserTenantIsolation(BaseAPITest, TenantIsolationTestMixin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "base_url", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    base_url = \"\\/users\"$/", "language": "Python", "kind": "variable", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "base_url", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    base_url = \"\\/users\"$/", "language": "Python", "kind": "variable", "scope": "TestUserTenantIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "mock_get_users", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^        def mock_get_users(url, headers=None, **kwargs):$/", "file": true, "language": "Python", "kind": "function", "signature": "(url, headers=None, **kwargs)", "scope": "TestUserTenantIsolation.test_user_list_tenant_isolation", "scopeKind": "member"}, {"_type": "tag", "name": "test_admin_update_user_role", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_admin_update_user_role(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_change_password", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_change_password(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserSelfService", "scopeKind": "class"}, {"_type": "tag", "name": "test_change_password_wrong_current", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_change_password_wrong_current(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserSelfService", "scopeKind": "class"}, {"_type": "tag", "name": "test_create_user_duplicate_email", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_create_user_duplicate_email(self, client: Mock, admin_auth_headers: Dict[str, str])/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_create_user_non_admin", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_create_user_non_admin(self, client: Mock, auth_headers: Dict[str, str], $/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str], sample_user_data: Dict[str, Any])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_create_user_success", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_create_user_success(self, client: Mock, admin_auth_headers: Dict[str, str], $/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str], sample_user_data: Dict[str, Any])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_cross_tenant_user_access_denied", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_cross_tenant_user_access_denied(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserTenantIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "test_deactivate_user", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_deactivate_user(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_get_own_profile", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_get_own_profile(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserSelfService", "scopeKind": "class"}, {"_type": "tag", "name": "test_get_user_activity_log", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_get_user_activity_log(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserSelfService", "scopeKind": "class"}, {"_type": "tag", "name": "test_get_user_profile", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_get_user_profile(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_list_users_in_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_list_users_in_tenant(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_search_users", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_search_users(self, client: Mock, admin_auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, admin_auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_update_other_user_profile_forbidden", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_update_other_user_profile_forbidden(self, client: Mock, auth_headers: Dict[str, str/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_update_own_profile", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_update_own_profile(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserSelfService", "scopeKind": "class"}, {"_type": "tag", "name": "test_update_user_profile", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_update_user_profile(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserManagement", "scopeKind": "class"}, {"_type": "tag", "name": "test_user_email_uniqueness_per_tenant", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_user_email_uniqueness_per_tenant(self, client: Mock, auth_headers: Dict[str, str]):$/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str])", "scope": "TestUserTenantIsolation", "scopeKind": "class"}, {"_type": "tag", "name": "test_user_list_tenant_isolation", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/tests/test_users.py", "pattern": "/^    def test_user_list_tenant_isolation(self, client: Mock, auth_headers: Dict[str, str], $/", "language": "Python", "kind": "member", "signature": "(self, client: Mock, auth_headers: Dict[str, str], different_tenant_headers: Dict[str, str])", "scope": "TestUserTenantIsolation", "scopeKind": "class"}], "hash": "3eda3d503c6f28eddfb1df0024289f92", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/tests/test_users.py", "fields": [{"name": "base_url = \"\\/users\"", "scope": "TestUserManagement", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"25": ""}]}