{"is_source_file": true, "format": "Python", "description": "This file defines API routes for a time tracking system, implementing endpoints for managing technologies, time entries, timers, and dashboard summaries using FastAPI. It includes route handlers for creating, listing, starting/stopping timers, and fetching summaries with detailed logic for database interactions and request/response schemas.", "external_files": [".../database/connection.py", ".../database/models.py", ".../schemas/time_tracking.py", ".../auth/dependencies.py"], "external_methods": ["get_db()", "get_current_user()", "get_tenant_filter()", "TechnologyResponse.from_orm()", "TimeEntryResponse.from_orm()"], "published": ["router"], "classes": [{"name": "TechnologyResponse", "description": "Schema for technology data returned in responses."}, {"name": "TimeEntryResponse", "description": "Schema for time entry data returned in responses."}, {"name": "DashboardSummary", "description": "Schema summarizing dashboard data."}], "methods": [{"name": "create_technology( request: TechnologyCreateRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )", "description": "Creates a new technology for categorizing work, handling duplication checks.", "scope": "", "scopeKind": ""}, {"name": "list_technologies( active: Optional[bool] = Query(None, description=\"Filter by active status\"), category: Optional[str] = Query(None, description=\"Filter by category\"), current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )", "description": "Retrieves list of technologies filtered by active status or category.", "scope": "", "scopeKind": ""}, {"name": "create_time_entry( request: TimeEntryCreateRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )", "description": "Creates a new time entry with optional duration and amount calculations.", "scope": "", "scopeKind": ""}, {"name": "list_time_entries( project_id: Optional[UUID] = Query(None, description=\"Filter by project\"), start_date: Optional[str] = Query(None, description=\"Start date filter (YYYY-MM-DD)\"), end_date: Optional[str] = Query(None, description=\"End date filter (YYYY-MM-DD)\"), billable: Optional[bool] = Query(None, description=\"Filter by billable status\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )", "description": "Provides paginated filtered list of user's time entries with statistics.", "scope": "", "scopeKind": ""}, {"name": "start_timer( request: TimerStartRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )", "description": "Starts a new running timer for a project.", "scope": "", "scopeKind": ""}, {"name": "stop_timer( request: TimerStopRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )", "description": "Stops the active timer and computes final duration and cost.", "scope": "", "scopeKind": ""}, {"name": "get_dashboard_summary( current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )", "description": "Returns aggregated time tracking data for display.", "scope": "", "scopeKind": ""}, {"name": "get_hours_for_period(start_date)", "scope": "get_dashboard_summary", "scopeKind": "function", "description": "unavailable"}], "calls": ["get_db()", "get_current_user()", "get_tenant_filter()", "TechnologyResponse.from_orm()", "TimeEntryResponse.from_orm()", "db.query()", "db.add()", "db.commit()", "db.refresh()", "func.sum()"], "search-terms": ["TimeEntry", "Technology", "dashboard_summary", "timer_start", "timer_stop", "technologies", "time-entries", "routes", "fastapi"], "state": 2, "file_id": 29, "knowledge_revision": 66, "git_revision": "", "revision_history": [{"62": ""}, {"66": ""}], "ctags": [{"_type": "tag", "name": "create_technology", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^async def create_technology($/", "language": "Python", "kind": "function", "signature": "( request: TechnologyCreateRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "create_time_entry", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^async def create_time_entry($/", "language": "Python", "kind": "function", "signature": "( request: TimeEntryCreateRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "dashboard_router", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^dashboard_router = APIRouter(prefix=\"\\/dashboard\", tags=[\"Dashboard\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_dashboard_summary", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^async def get_dashboard_summary($/", "language": "Python", "kind": "function", "signature": "( current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_hours_for_period", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^    def get_hours_for_period(start_date):$/", "file": true, "language": "Python", "kind": "function", "signature": "(start_date)", "scope": "get_dashboard_summary", "scopeKind": "function"}, {"_type": "tag", "name": "list_technologies", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^async def list_technologies($/", "language": "Python", "kind": "function", "signature": "( active: Optional[bool] = Query(None, description=\"Filter by active status\"), category: Optional[str] = Query(None, description=\"Filter by category\"), current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "list_time_entries", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^async def list_time_entries($/", "language": "Python", "kind": "function", "signature": "( project_id: Optional[UUID] = Query(None, description=\"Filter by project\"), start_date: Optional[str] = Query(None, description=\"Start date filter (YYYY-MM-DD)\"), end_date: Optional[str] = Query(None, description=\"End date filter (YYYY-MM-DD)\"), billable: Optional[bool] = Query(None, description=\"Filter by billable status\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^router = APIRouter(tags=[\"Time Tracking\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "start_timer", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^async def start_timer($/", "language": "Python", "kind": "function", "signature": "( request: TimerStartRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "stop_timer", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^async def stop_timer($/", "language": "Python", "kind": "function", "signature": "( request: TimerStopRequest, current_user: CurrentUser = Depends(get_current_user), tenant_filter: TenantFilter = Depends(get_tenant_filter), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "technology_router", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^technology_router = APIRouter(prefix=\"\\/technologies\", tags=[\"Technologies\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "time_entries_router", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^time_entries_router = APIRouter(prefix=\"\\/time-entries\", tags=[\"Time Entries\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "timer_router", "path": "/home/kavia/workspace/code-generation/multitenant-time-tracker-94699-61449/backend/src/api/routes/time_tracking.py", "pattern": "/^timer_router = APIRouter(prefix=\"\\/timer\", tags=[\"Timer\"])$/", "language": "Python", "kind": "variable"}], "hash": "25f7cc44c9a51decc6c3cfa2f0c46c05", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routes/time_tracking.py", "fields": [{"name": "dashboard_router = APIRouter(prefix=\"\\/dashboard\", tags=[\"Dashboard\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(tags=[\"Time Tracking\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "technology_router = APIRouter(prefix=\"\\/technologies\", tags=[\"Technologies\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "time_entries_router = APIRouter(prefix=\"\\/time-entries\", tags=[\"Time Entries\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "timer_router = APIRouter(prefix=\"\\/timer\", tags=[\"Timer\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}